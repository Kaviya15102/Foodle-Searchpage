{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KAVIYA ABARNA\\\\imageupload\\\\src\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader() {\n  _s();\n  const [selectedImages, setSelectedImages] = useState([]);\n  const handleImageUpload = event => {\n    const files = event.target.files;\n    const imageArray = [];\n    for (let i = 0; i < files.length; i++) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        imageArray.push(reader.result);\n        if (imageArray.length === files.length) {\n          setSelectedImages([...selectedImages, ...imageArray]);\n        }\n      };\n      reader.readAsDataURL(files[i]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Uploader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      multiple: true,\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), selectedImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), selectedImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: `Selected ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"H8NCClQcTTYNgFIkNepsXMggwvc=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUploader","_s","selectedImages","setSelectedImages","handleImageUpload","event","files","target","imageArray","i","length","reader","FileReader","onload","push","result","readAsDataURL","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","multiple","onChange","map","image","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/KAVIYA ABARNA/imageupload/src/ImageUploader.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ImageUploader() {\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const handleImageUpload = (event) => {\r\n    const files = event.target.files;\r\n    const imageArray = [];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        imageArray.push(reader.result);\r\n\r\n        if (imageArray.length === files.length) {\r\n          setSelectedImages([...selectedImages, ...imageArray]);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(files[i]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Image Uploader</h1>\r\n      <input type=\"file\" accept=\"image/*\" multiple onChange={handleImageUpload} />\r\n      {selectedImages.length > 0 && (\r\n        <div>\r\n          <h2>Selected Images:</h2>\r\n          {selectedImages.map((image, index) => (\r\n            <div key={index}>\r\n              <img src={image} alt={`Selected ${index}`} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUploader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChC,MAAME,UAAU,GAAG,EAAE;IAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QACpBL,UAAU,CAACM,IAAI,CAACH,MAAM,CAACI,MAAM,CAAC;QAE9B,IAAIP,UAAU,CAACE,MAAM,KAAKJ,KAAK,CAACI,MAAM,EAAE;UACtCP,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAE,GAAGM,UAAU,CAAC,CAAC;QACvD;MACF,CAAC;MAEDG,MAAM,CAACK,aAAa,CAACV,KAAK,CAACG,CAAC,CAAC,CAAC;IAChC;EACF,CAAC;EAED,oBACEV,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ;MAACC,QAAQ,EAAErB;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3EnB,cAAc,CAACQ,MAAM,GAAG,CAAC,iBACxBX,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxBnB,cAAc,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC/B7B,OAAA;QAAAkB,QAAA,eACElB,OAAA;UAAK8B,GAAG,EAAEF,KAAM;UAACG,GAAG,EAAG,YAAWF,KAAM;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADrCO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAtCQD,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAwCtB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}